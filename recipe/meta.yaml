{% set name = "model-archiver" %}
{% set version = "1.0.4" %}
{% set mms_version = "1.1.8" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/awslabs/multi-model-server/archive/v{{ mms_version }}.tar.gz
  sha256: 64876dbfd56671d34aedc40ec8de7988bd3ed25c3806cd463aaa62c094890ab8
  patches:
    - skip-tests.patch

build:
  script: {{ PYTHON }} -m pip install ./model-archiver -vv
  noarch: python
  number: 4
  entry_points:
    - model-archiver = model_archiver.model_packaging:generate_model_archive
  
requirements:
  host:
    - python {{ python_min }}
    - pip
  run:
    - python >={{ python_min }}
    - enum-compat
    - future

test:
  requires:
    - pip
    - python {{ python_min }}
  commands:
    - pip check
    - model-archiver --help

about:
  home: https://github.com/awslabs/multi-model-server/tree/master/model-archiver
  summary: 'Model Archiver is a tool used for creating archives of trained neural net models that can be consumed by Multi-Model-Server inference.'
  description: |
    Use the Model Archiver CLI to start create a .mar file.

    A key feature of MMS is the ability to package all model artifacts into 
    a single model archive file. It is a separate command line interface (CLI), 
    model-archiver, that can take model checkpoints and package them into a .mar file. 
    This file can then be redistributed and served by anyone using MMS. 
    It takes in the following model artifacts: a model composed of one or more files, 
    the description of the model's inputs in the form of a signature file, a service 
    file describing how to handle inputs and outputs, and other optional assets that 
    may be required to serve the model. The CLI creates a .mar file that MMS's server 
    CLI uses to serve the models.
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE

extra:
  recipe-maintainers:
    - sodre
